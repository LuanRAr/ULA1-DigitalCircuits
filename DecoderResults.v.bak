module DecoderResults(A, B, C, D, a, b, c, d, e, f, g);
input A, B, C, D;
output a, b, c, d, e, f, g;

//wires negados
wire notA, notB, notC, notD;

not(notA, A);
not(notB, B);
not(notC, C);
not(notD, D);

//letra A
and (s1, notA, notB, notC, D);
and (s2, notA, B, notD);
or (a, s1, s2);

//letra B
and (s3, notA, B, notC);
and (s4, notA, B, notD);
or (b, s3, s4);

//letra C
and (c, notA, notB, C, notD);

//letra D
and (s5, notA, B, notC, notD);
and (s6, notA, B, C, D);
and (s7, notB, notC, D);
or (d, s5, s6, s7);

//letra E
and (s8, notB, notC, D);
and (s9, A, notB, notC);
and (s10, notA, D);
or (e, s8, s9, s10);

//letra F
and (s11, notA, C, D);
and(s12, notA, notB, D);
and (s13, notA, notB, C);
or (f, s11, s12, s13);

//letra g
and (s14, notA, B, C, D);
and (s15, notA, notB, notC);
or (g, s14, s15);

endmodule





